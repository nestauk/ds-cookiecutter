[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["{{ cookiecutter.repo_name }}"]

[project]
name = "{{ cookiecutter.project_name }}"
version = "0.1.0"
description = "{{ cookiecutter.description }}"
authors = [{name = "{{ cookiecutter.author_name }}"}]
license = {text = "{% if cookiecutter.openness == 'public' %}MIT{% else %}proprietary{% endif %}"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = []

[project.urls]
repository = "https://github.com/nestauk/{{ cookiecutter.repo_name }}"
issues = "https://github.com/nestauk/{{ cookiecutter.repo_name }}/issues"

[dependency-groups]
dev = [
    "ipykernel",
    "jupytext",
    "ruff",
    "Sphinx",
    "sphinxcontrib-napoleon",
    "sphinx-rtd-theme",
    "pytest",
    "pre-commit",
    "pre-commit-hooks"
]

[tool.jupytext]
# Always pair ipynb notebooks to py:percent files
default_jupytext_formats = "ipynb,py:percent"
# Comment out magics (allows code formatting)
comment_magics = true
# Strip cell-level metadata (avoid polluting git diffs)
default_cell_metadata_filter = "-all"

[tool.ruff.lint]
select = [
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear: Likely bugs
    "C",   # flake8-comprehensions and mccabe complexity
    "D",   # pydocstyle: Docstring conventions
    "E",   # pycodestyle: Errors (default)
    "F",   # pyflakes: Linter
    "I",   # isort
    "N",   # pep8-naming: Naming conventions
    "W",   # pycodestyle: Warnings (default)
]
ignore = [
    "D100", # Warns about missing module-level docstrings
    "S101", # Warns about assert being removed when compiled
]

[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.repo_name }}"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402", "D104"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
