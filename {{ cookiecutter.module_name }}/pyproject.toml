[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["{{ cookiecutter.module_name }}"]

[project]
name = "{{ cookiecutter.module_name }}"
version = "0.1.0"
description = "{{ cookiecutter.description }}"
authors = [{ name = "Nesta" }]
license = { text = "{% if cookiecutter.openness == 'public' %}MIT{% else %}proprietary{% endif %}" }
readme = "README.md"
requires-python = "{{ cookiecutter.python_version }}"
dependencies = []
{% if cookiecutter.repo_url %}
[project.urls]
repository = "{% if cookiecutter.repo_url.startswith('git@') %}https://{{ cookiecutter.repo_url[4:-4].replace(':', '/') }}{% else %}{{ cookiecutter.repo_url }}{% endif %}"
issues = "{% if cookiecutter.repo_url.startswith('git@') %}https://{{ cookiecutter.repo_url[4:-4].replace(':', '/') }}{% else %}{{ cookiecutter.repo_url }}{% endif %}/issues"
{% endif %}
[dependency-groups]
dev = ["ipykernel", "jupytext", "ruff", {% if cookiecutter.file_structure == 'full' %}"pytest", {% endif %}"pre-commit"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear: Likely bugs
    "C",   # flake8-comprehensions and mccabe complexity
    "D",   # pydocstyle: Docstring conventions
    "E",   # pycodestyle: Errors (default)
    "F",   # pyflakes: Linter
    "I",   # isort
    "N",   # pep8-naming: Naming conventions
    "W",   # pycodestyle: Warnings (default)
]
ignore = [
    "D100", # Warns about missing module-level docstrings
    "S101", # Warns about assert being removed when compiled
]

[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.module_name }}"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402", "D104"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
